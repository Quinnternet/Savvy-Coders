export default fillCalendar

const moment = require('moment')
const currentDate = moment(); // now
const firstDate = moment(currentDate).date(1); // date of first day of month
const lastDate = moment(currentDate).endOf('month'); // date of last day of month
const startDay = moment(firstDate).day(); // day of the week of first day of month
const endDate = moment(lastDate).date(); // last date of month
const calendarCells = document.querySelectorAll('.cell');
const dateArray = [];

function fillCalendar() {
    // adds the dates of the current month to dateArray
    function fillCurrent() {
        for (let i = startDay; i < endDate + startDay; i++) {
            calendarCells[i].textContent = i - startDay + 1
            dateArray.push(i - startDay + 1)
        }
    }
    // checks the number of cells at the beginning of the grid
    // uses that number to determine how many dates to pull from
    // the end of the previous month
    function checkCells() {
        
    }

    // uses checkCells()' output, and adds that many dates
    // from the end of the previous month to the beginning of dateArray
    function fillPrevious() {
        const previousMonth = moment(currentDate).subtract(1, 'month');
        const previousEndDay = moment(previousMonth).endOf('month').day();
    
    }
    // adds the next month's dates to the end of dateArray 
    // up to a maximum equalling the total remaining cells;
    // extra numbers will not render on the page
    function fillNext() {
        const nextMonth = moment(currentDate).add(1, 'month');
        const nextStartDay = nextMonth.startOf('month').day();
        for (let i = nextStartDay; i < 11; i++) {
            dateArray.push(i - nextStartDay + 1)
            }
    }
    // iterates across the grid, replacing the text in each cell
    // with the numbers generated by the previous functions
    function populate() {
        for (let i = startDay; i < startDay + endDate; i++) {
            // calendarCells[i].textContent = i - startDay + 1
            // dateArray.push(i - startDay + 1)
        }
    }

    fillCurrent()
    fillPrevious()
    fillNext()
    populate()
}